package EthereumApi

import (
    "encoding/json"
    "bytes"
    "net/http"
    "io/ioutil"
    "fmt"
    //"time"
)

// Generated by curl-to-Go: https://mholt.github.io/curl-to-go

type Payload struct {
	Jsonrpc string        `json:"jsonrpc"`
	Method  string        `json:"method"`
	Params  []interface{} `json:"params"`
	ID      int           `json:"id"`
}

func setParams(blockNumber string,verbose bool) []interface{}{
     params := make([]interface{},2)
     params[0] = blockNumber 
     params[1] = verbose
     return params
}

func startPolling(){


}

func handleRequest(req *http.Request) {

    resp, err := http.DefaultClient.Do(req)
    if err != nil {
 	 // handle err
    }
    defer resp.Body.Close()
    content, _ := ioutil.ReadAll(resp.Body)
    fmt.Println(string(content))
}

func main() {

    params := setParams("latest", true)

    data := Payload{Jsonrpc:"2.0",Method:"eth_getBlockByNumber",Params:params, ID:1}

    payloadBytes, err := json.Marshal(data)
    if err != nil {
	// handle err
     }
    body := bytes.NewReader(payloadBytes)
    req, err := http.NewRequest("POST", "https://mainnet.infura.io/v3/924c0f97172441a28a5b5270db968474", body)
    if err != nil {
	// handle err
    }
    req.Header.Set("Content-Type", "application/json")
    handleRequest(req)

}

